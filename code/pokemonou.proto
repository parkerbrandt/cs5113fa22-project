syntax = "proto3";

package pokemonOU;

service PokemonOU {

    // Server Services
    rpc game_status(Name) returns (GameStatus) {}
    rpc captured(Name) returns (Pokemon) {}
    rpc actions(Names) returns (ActionList) {}
    rpc show_board(Message) returns (Board) {}

	// Services ran on the server for both Trainers and Pokemon
	rpc initialize_client(Name) returns (ClientInfo) {}
    rpc check_board(Location) returns (LocationList) {}
    rpc move(ClientInfo) returns (Location) {}
    rpc show_path(Name) returns (LocationList) {}

    // Trainer Services
    rpc capture(ClientInfo) returns (Pokemon) {}
    rpc show_pokedex(Name) returns (Pokedex) {}

    // Pokemon Services
    rpc show_trainer_info(Name) returns (Trainer) {}
}

message Empty {}

message Name {
    string name = 1;
    string type = 2;            // Will either be "trainer" or "pokemon"
}

message Names {
    repeated Names names = 1;
}

message GameStatus {
    string status = 1;
}

message Message {
    string description = 1;
}

message ClientInfo {
    string name = 1;
    string emojiID = 2;
    int32 xLocation = 3;
    int32 yLocation = 4;
}

message Trainer {
    string name = 1;
    string emoji = 2;    
    int32 xLocation = 3;
    int32 yLocation = 4;
}

message Pokemon {
    string name = 1;
    string status = 2;          // The status of the Pokemon can be one of:
                                // "free" or "captured"
    string emoji = 3;
    int32 xLocation = 4;
    int32 yLocation = 5;
}

message Pokedex {
    string trainername = 1;         // The name of the trainer who owns these Pokemon
    repeated string pokemonnames = 2;   // The names of the pokemon in the pokedex
}

message Board {
    int32 sidelength = 1;
    repeated string cellvalues = 2;     // The values kept in the Board turned from a 2D array into a 1D array
                                        // Will have either a name for a trainer/pokemon or "empty" 
}

message Location {
    int32 x = 1;
    int32 y = 2;
}

message LocationList {
    repeated Location locs = 1;
}

message Move {
    Name name = 1;
    Location loc = 2;
    string action = 3;
}

message MoveList {
    repeated Move moves = 1;
}